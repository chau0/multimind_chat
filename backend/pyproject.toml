[project]
name = "multimind-backend"
version = "0.1.0"
description = "Backend for the Multimind AI chat application"
authors = [{ name = "Your Name", email = "you@example.com" }]
requires-python = ">=3.11"
dependencies = [
    "fastapi==0.109.0",
    "uvicorn[standard]==0.27.0",
    "sqlalchemy==2.0.25",
    "alembic==1.13.1",
    # Supabase client
    "supabase==2.3.4",
    # PostgreSQL drivers (for Supabase)
    "psycopg2-binary==2.9.9",
    "asyncpg==0.29.0",
    # SQL Server drivers (for Azure SQL - backward compatibility)
    "pyodbc==5.0.1",
    "aioodbc==0.4.0",
    "pydantic[email]==2.5.3",
    "python-dotenv==1.0.1",
    "openai==1.10.0",
    "httpx>=0.24,<0.26",
    "pydantic-settings>=2.2.1",
    "aiosqlite>=0.19.0",
    "pytest-asyncio>=0.23.8",
]

[project.optional-dependencies]
dev = [
    "pytest==8.0.0",
    "pytest-cov==4.1.0",
    "black==24.1.1",
    "isort==5.13.2",
    "flake8==7.0.0",
    "mypy==1.8.0",
    "httpx>=0.24,<0.26",
    "aiosqlite==0.19.0",
    "pre-commit==3.6.0",
    "bandit==1.7.5",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations/versions
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app"]
known_third_party = ["fastapi", "sqlalchemy", "pydantic", "openai", "supabase"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "tests.*",
    "migrations.*",
]
ignore_errors = true

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["."]
addopts = "-v --tb=short"
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.bandit]
exclude_dirs = ["tests", "migrations"]
skips = ["B101", "B601"]  # Skip assert_used and shell_injection_process_start

[dependency-groups]
dev = [
    "pytest>=8.0.0",
]
